* Introduction
Define your keyboard layout as C++ class.
Primarily focused on implementing [[https://kozikow.wordpress.com/2013/11/15/the-only-alternative-keyboard-layout-youll-ever-need-as-a-programmer/][my keyboard layout]].
* Why use it instead of xmodmap/xcape
- Just single representation for a key to deal with - input_event code from [[https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h][input_event_codes.h]]. No need to distinguish between scancode, keysym or keycode.
- For complex layouts, xmodmap/xcape gets hard to maintain: https://github.com/kozikow/kozikow-layout-linux.
- Thread per keyboard lets you have different layout per keyboard.
- Unit test your layout.
* Installation
** Install bazel
*** [[http://bazel.io/docs/install.html][Build from source on ubuntu]]
#+BEGIN_SRC bash
  apt-get install -y software-properties-common python-software-properties

  # C++
  apt-get install -y g++

  # Java 8
  echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
  add-apt-repository -y ppa:webupd8team/java
  sudo apt-get update
  apt-get install -y oracle-java8-installer

  # Bazel dependencies
  apt-get install -y pkg-config zip zlib1g-dev unzip git

  # Build bazel
  git clone https://github.com/google/bazel.git ~/bazel && cd ~/bazel
  ~/bazel/compile.sh
  sudo cp ~/bazel/bazel-bin/src/bazel /usr/local/bin
#+END_SRC
*** Build from source on Arch Linux
#+BEGIN_SRC bash :results output
   pacman -S jdk8-openjdk zip unzip zlib pkg-config

   mkdir -p ~/git_repos/github/google
   cd ~/git_repos/github/google
   git clone https://github.com/google/bazel.git  
   cd bazel
   ./compile.sh
   sudo cp /home/kozikow/git_repos/github/google/bazel/output/bazel /usr/local/bin/
#+END_SRC
** Build keyremaplinux
#+BEGIN_SRC bash
  git clone https://github.com/kozikow/keyremaplinux ~/keyremaplinux
  cd ~/keyremaplinux
  bazel build //keyremaplinux:keyremaplinux
#+END_SRC
* Running on Linux
** Run one-of:
#+BEGIN_SRC bash
  sudo nice -n -20 ./bazel-bin/keyremaplinux/keyremaplinux kozikow_standard
#+END_SRC
** Enable automatic restarts
#+BEGIN_SRC bash :results output
    sudo cp keyremaplinux.service /etc/systemd/system/keyremaplinux.service
    cd /etc/systemd/system/multi-user.target.wants
    sudo ln -s ../keyremaplinux.service keyremaplinux.service
    sudo systemctl enable keyremaplinux.service
    sudo systemctl restart keyremaplinux.service
#+END_SRC

#+results:

* Implementing the new layout
1. Extend [[https://github.com/kozikow/keyremaplinux/blob/master/keyremaplinux/remapper/remapper.h][Remapper]] and implement function [[https://github.com/kozikow/keyremaplinux/blob/master/keyremaplinux/remapper/remapper.h#L15][Remap]].
2. For example [[https://github.com/kozikow/keyremaplinux/blob/master/keyremaplinux/remapper/kozikow_layout_remapper.h][KozikowLayoutRemapper]].
3. In function Remap, consume and produce [[https://github.com/torvalds/linux/blob/master/include/uapi/linux/input.h#L25][Linux input event from input.h]].
   What you consume is what user have typed. What you produce is what OS will see.
4. [[https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h][Event codes are defined in input-event-codes.h]]
* Run tests
#+BEGIN_SRC bash
  bazel test //keyremaplinux:all --test_output=errors
#+END_SRC
